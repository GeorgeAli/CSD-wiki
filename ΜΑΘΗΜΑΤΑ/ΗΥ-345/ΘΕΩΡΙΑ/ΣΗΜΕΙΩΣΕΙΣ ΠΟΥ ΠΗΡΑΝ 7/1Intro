0)Epipeda 
    0)Hardware
    1)kernel mode = operating system
    2)User mode = shell/Gui    
                applications

    O xristis(user space) den mpori na di ta periexomena tis mnimis se kernel mode

    To operating system parexi APIs gia xrisi tou hardware apo applications
    pou ta trexo apo to shell i Gui

    *Mpori sto user mode na trexo kai applications pou sxetizonte me to operating 
     system kai einai san high level komatia tou

  
1)Operation systems  
  1)kani eukoli tin xrisi tou hardware apo ton application programmer/user
    Meso abstractions(px diepafes)

     Aplousteboun para poli tin xrisi tou hardware
     O tropos pou to kanoun einai meso drivers(exidikeumenous gia siskeues)
     kai device independant software pou einai gia omada siskeuon 
     (meta exi leptomeries gia to ti prepei na parexi to litourgiko oste na dieukolini
      max ton xristi)
     Px gia sata odigies einai 450 selides,me basi autes ftiaxno disk driver
     kai meta xrisi apo ta application einai eukoli

  2)beltistos tropos axiopiisis tou hardware
    (o tropos pou xirizete to litourgiko to hardware einai beltistopoiimenos se sxesi 
    me ena tixeo programatismo pou tha mporouse na kani enas xristis)
 
  3)diamirasmos tou hardware se ola ta programata kai se olous tous xristes 
    me apodotiko/dikeo tropo = multiplexing (sharing) resources
    Exo polous xristes me pola application o kathenas,ola me koina resources => 
    anagi apo to litourgiko na mirazi ta resources alla kai na orizi xronous
     xrisis

    Multiplexing(sharing) resources.Thelo apodotika kai dikea
    1)time //orizo xroniki sira,kai xrono xrisis apo kathena 
    2)space //xorizo tin resource kai perni o kathenas ena tmima px mnimi

2)shell or gui xrisimopoio gia xrisi tou op

3)Ta litourgika einai terastia
  kernel -> 5 million lines
  shared libraries -> 70 million lines
  application software -> ....


5)Computer  architecture
  Sindeonte meso BUS

  CPU
  MEMORY
  VIDEO CONTROLLER
  KEYBOARD >>
  USB  >>
  HARD DISK CONTROLLER

6)CPU
   registers = program counter
               stack pointer(top of stack)
               PSW(Program status code) periexi plirofories katastasis
                  px ean ime se user mode i kernel mode (pios trexi to programa)

   pipeline =  seira apo bimata pou ginonte gia ektelesi kodika apo exidikeumena
               tmimata pou otan teliosi to apotelesma to perni to epomeno
              
               fetch,decode,executive palia ta ekane ola 1 cpu se 3 bimata
               pleon i cpu exoun exidikeumena tmimata gia kathe doulia kai 
               ginete siriaka  fetch->decode->execute
              
   
   replicate = H cpu na exi pola meri pou kanoun tin idia doulia tautoxrona 
               i tin idia me mikrodiafores,se 1 epexergasti

              px superscalar cpu otan exo kai idikeumena tmimata ektelesis px
                 alo gia praxi boolean,float,kai integer

                 Mpori diladi na exo   fetch->decode -> float praxi
				       fetch->decode -> boolean praxi

                 kai na ta kano tautoxrona,exo akribos ta idia fetch,decode
                 kai 3 idiou tipou meri gia praxis.Alla 1 epexergasti.

              px multithreading epexergastes,edo exo san 2(i perisoteres)
                 oures pou xrisimopoioun 1 epexergasti enalax

   multicore = exo pola cores(diladi san pola cpus) se 1 chip
               Gpu exo xiliades cores,gia mikrous paralilous ipologismous pou
                xrisimopoiounte px sta grafika

   H cpu einai ite se kernel mode ite se user mode,otan trexo ena programa
   se kathe system call tou mpeno se kernel mode,kai otan telioso epistrefo se
   user mode

   
7)Memory
   registers //mesa stin cpu , 1nsec  <1kb
     px 32 bit gia 32 bit CPU 
        64 gia 64 cpu
   cache //dipla stin cpu mesa sto chip  , 2nsec  4mb   kostizi(xoros sto chip+xrima)
    Exoun level px level 1 level 2
    ean astoxia se ola ta level tote pao main
   main memory //me bus, 10nsec       1-8GB
   disk memory //me bus 10msec

   

8)cache (pio analitika)
  Prepei na krinoun
  pote na baloun kati stin cache
  se pia thesi(cache line) stin cache
  se pia cache
  pio na bgaloun,kai na to xanabaloun stin antistixi thesi pou einai to 
    palio antigrafo  

  4096 cache lines(blocks) of 64 bytes and 32 bit addresses
  bits 6 through 17 might be used to specify the cache line
  with bits 0 to 5 the byte within the cache line 

  Exoun levels 
  L1 16kb 
  L2 eos megabytes

  Se multicore
  exoun 1 private L1 cache oi cores kai mia shared L2 cache

9)Main memory(analitika)
    1)RAM (RANDOM ACCESS MEMORY)  //grigori
      read/write/volatile(xani dedomena xoris reuma)
    2)ROM  
      read only/non-volatile
    3)EEPROM(Electrically Erasable PROM)+flash memory
      read/write/nonvolatile
    4)CMOS memory 
      volatile alla me bataria san non-volatile
      gia imerominia i gia parametrous pou rithmizo px allages sto bios
 
   
10)Disk,IO(se alo simio)

11)Buses

   Arxika eixa ena bus kai ola itan sindedemena pano tou

   ISA -> PCI -> PCIexpress (exelixi)

   shared bus architecture => 1 sto bus kathe fora (palia) ISA
   parallel bus architecture => stelno se pola kalodia to idio minima PCI
   serial bus architecture => stelno sigekrimena ta dedomena se messages(lane= apostoli)
     *Ean thelo mporo na stilo pola lanes paralila
   
   

   Meta eixa pola buses PCI/PCIe/SATA/USB/DMI
   px domi
    multicores me shared cache memory bus
    CPU -DDR3 BUS- memory
    CPU -PCIe bus - GPU
    CPU-DMI bus-controller(kai ston controller sindeo poles alles siskeues me 
      px USB/PCIe/PCI/SATA buses/SCSI (Small Computer System Interface) bus)
   
   Mporo na exo pola buses na pigenoun se controller kai me DMI meta na sindeonte
   me ipolipa sto motherboard

12)plug and play pc

   to operating system kathorizi dinamika pies einai oi IO addresses kai device numbers
   ,interrupt numbers
   kai oxi ek ton proteron orismena=> den mplekontai oi siskeues pou mpori na tixoun
   px idious arithmous

13)booting 
  
   motherboard exi software to BIOS (Basic Input Output System).
   se flash RAM(non-volatile,den ta xani xoris reuma)
   xekinontas elenxi mnimi tis basikes siskeues kai meta epilegi mia 
    boot device me plirofories apo tin CMOS memory

   boot => first sector disk exi to MBR program(MBR=Master boot sector) 
   MBR periexi sto telos tou ton partition table=> ton diabazo
   Ston partition table 1 partition mono einai active
   Diavazo apo tin active to proto block = boot block program auto xekinai to litourgiko
   
   Meta to operating system perni apo to BIOS configuration information gia tis devices
   ean tou lipoun kapia drivers zitaei apo ton xristi na ta bali kai xekinaei
   

24)Users 
   UID -> user identification
   GID -> group indentification

   superuser -> su (administrator)   

25)Process
   1)process = program pou trexi se diko tou address space

   2)Kathe process exi
     
     process id
     process owner
     process priority
     the parent process
     environment variables for each process
     state = ACTIVE, SLEEPING, RUNNING     

     resources 
        registers(stack pointer+program counter)
        open files(kai simio pou eimai px sto file)
        outstanding alarms?
        related processes
        ....

     code(ton kodika tis)
     stack    
    
     *Ousiastika exi oti xriazete ena programa gia na trexi
   
   3)Process table => krataei plirofories gia tin state ton process
      Ton xrisimopoio kai otan kano mia process suspend apothikeuo 
      se auton plirofories gia na xanaxekiniso tin process

   4)suspend process => kratao address space(core image) + sono state ston process table
                        gia na kano restart

     Otan mia process prepei na gini suspend to operating system stelni ena alarm signal
     stin process => sono state(sono registers sto stack tis process),kai xekinai enas
     signal handler pou perimeni na akousi to katalilo signal gia na xanaxekinisi

   5)Process tree structure 
     Mia process mpori na dimiourgisi child processes kai ta child alla processes
     => ftiaxnete ena dentro
  

27)Files (ta xrisimopoioun oi processes)
   To litourgiko parexi system calls gia prosbasi se auta oste na einai eukoli
   Kathe file pou anigete prepei na klini
   Ta files einai organomena se directories
     (exo system calls kai gia na ftiaxno/svino directories)
   File system= dentro me directories,files xekinonta apo kapio root directory   
   absolute path enos directory = diadromi apo to root directory 
      xekinaei me /rootDirectory/test/
   relative path apo ena simio = simio/test/    (den xekinaei me /)
   File descriptor = integer pou epistrefi to litourgiko otan anixe me epitixia
                     ena arxio,einai kapos san id oste otan thelo xana prosbasi na 
                     doso ton integer => na xero pio anikto arxio thelo
   
   Mounting devices = sto unix/linux den exo hard drive letters,ola mpenoun sto file
                      system san directories (px o skliros ginete ena directory)
     /mnt  (exi mesa ta devices san fakelous)

   Special file = a I/O device tha looks like a file,stelno I/O san na einai file
     two types  block special files(px disks)+character special files(px printers)
   
     /dev   (ekei bazo ta special files)

28)Pipe
   2 processes enononte meso pipe gia na epikoinonoun
   To pipe einai san arxeio opou ekei grafi i mia process gia na diavazi i alli
   Einai san na grafo se ena arxeio,asxeta pou den einai,gia na diakrino ean einai
   pipe i kanoniko arxio xrisimopoio system call

   processA----pipe---processB


29)File permissions
   Exo 3 idi xriston = onwer-group-everyone
   Exo 3 idi dikeomaton = write-read-executate  rwx
   Sinolo 9 bits

   px   rwxr-x--x => owner read+write+execute

30)shell(= linux command interpeter),kali to litourgiko meso system calls
   1)px date => i process tou shell ftiaxni ena child process pou kali tin date system
     call 

   2)cat file1 file2 file3 | sort >/dev/lp  
      | simeni kalese tin sort me oti apotelesma exi i cat,kai to > simeni tin stdout
      stiltin ston ektipoti

   3)otan patao mia entoli tote perimeno na teliosi kai meta epistrefo
     ean thelo na epistrepso amesos bazo & sto telos tis entolis =>
     entoli trexi sto background

31)System calls (pidixa ta ipolipa,enosi me oti ixa diavasi)
   1)ena programa pou trexi theli kati apo to litourgiko px na diavasi ena arxeio
     => kali tin katalili system call me parametrous => kernel mode kai meta epistrofi
     pali se user mode

   2)px count = read(fd, buffer, nbytes);  //c function
      
     fb= arxeio
     buffer= pinakas bytes gia apothikeusi
     nbytes = posa na diabaso gia na apothikeuso sto buffer

     Ean error tote count=-1 kai global variable errno=-1

   3)Diadikasia klisis
     read(fd, buffer, nbytes); 

     1)mpenoun ta orismata tis sto stack me anapodi seira
     2)o kodikos tis se register
     3)kalite to sistima
       TRAP(einai instruction) gia switch se kernel mode
     4)ektelo tin read system call 
     5)o system call handler epistrefi=> pali user mode
        
41)POSIX = C functions library that call system calls 
   (sinithos 1 function 1 system call,alla den einai aparetito) 

   
46)OPERATING SYSTEM STRUCTURE

  1)monolithic systems
  2)layered systems
  3)microkernels
  4)client-server systems
  5)virtual machines
  6)exokernels

  
47)Monolithic (to pio sixno)
   Main procedure
     to litourgiko einai 1 programa pou to kano compile kai to trexo
     (apo kodika litourgikou mporo na kaleso opia sinartisi litourgikou thelo)
   System calls
     gia system calls,bazi orismata + ton arithmo tis system call kai meta
     trap,kai to litourgiko blepi pia thelo kai me pia orismata
   boithitikes sinartisis,libraries

   Arnitika einai i poliplokotita tou oti den to xorizo se autoteli tmimata
   kai otan crash pai olo crash

48)Layered Systems

   5 The operator
   4 User programs
   3 Input/output management
   2 Operator-process communication  
   1 Memory and drum management
   0 Processor allocation and multiprogramming


   Ta layers einai xexorista programata,pou epoikoinonoun

49)Microkenels

   Exo 1 micro kernel me ta basika kai ta ipolipa trexoun san user processes
   => asfalia apo crashes

50)Client server model

   Xorizo tis process se servers kai clients

   To modelo auto einai gia disturbed operating systems

51)virtual machines

   Me host operating system(type2) i xoris type1

52)Exokernels

   Xorizo resources kai kathe litourgiko exi ta dika tou
   stis virtuals machines itan mirazomenes me mapping tou ti aniki se pio

oxi 1.2/1.4
