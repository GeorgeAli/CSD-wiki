nfs???? chapter 10

1)filesystem=part of operating system responsible gia:
  
  file    name/structure/access/protection

2)File descriptor = integer, id aniktou arxiou(to epistrefi to litourgiko kata to open)
                    oi process apothikeuoun to pia files exoun anikta meso autou

3)File = sequence of bytes

4)File types

  1)Regular files = auta pou xrisimopoiei o xristis
  2)directories = System file(domi sto file system)
  3)special files
    character = related to IO input/output data gia IO litourgies
    block  = sequence of numbered blocks,pou mporo na diabazo me almata
             san anaparastasi tou diskou

5)File access = sequential/random(seek)
  
  1 pinaka ana arxeio/krataei tis thesis pou eimai stis diafores process

6)File attributes(file metadata) (setAttributes/getAtrbiutes)
  
    1)Se pion aniki:
       protection(File permissions) 
         Exo 3 idi xriston = onwer-group-everyone
         Exo 3 idi dikeomaton = write-read-executate  rwx
         Sinolo 9 bits

         px   rwxr-x--x => owner read+write+execute
       creator
       owner
       password(zitai kodiko gia prosbasi)

     2)Prosbasis
      
       hidden 
       read only
       system file
       archive (ean exo backup tote 1 ,alios 0 gia na kano otan to do)
       temporary

      date+time last modified/created
      filesize
       ... sel 272 pola akoma

7)Directories = pia arxia anikoun se auto (system file)
    px arxiko block tou file  H  i-node
      

8)link(hard link)(to arxio exi 1+ onomata se diafora directories,counter sto file)
  /symbolic link(anafora sto arxio,oxi name,alla anafora sto name)
  /unlink(delete directory kai files)

9)Partition parts

   Boot block
   Superblock  
      fortonete stin mnimi sto boot
      basikes parametrous pou perigrafoun to filesystem 
        px magic number me to filesystem type,number of blocks sto filesystem ktl
   Free space mgmt  //free space,list of pointers se adia blocks sto disko
   Array of I-nodes  1 i-node/1 file 
   Root dir //top sto filesystem
   Files and directories  //ta ipolipa data


10)Contiguous allocation

   1)bazo ta arxia oloklira se sinexomena block sto disko
   2)Xrizome mono pointer sto proto block tou arxiou,
     kai ena noumero me to posa blocks exi to file
     (ean ena file einai 5+1/2 block tote to 1/2 wasted)
   3)1 seek mono(1 fora kefali) => poli grigoro
   4)Problima(afou gemisi o diskos)

     1)deletes afinoun kena
       akoma kai ean bro kati na balo sto keno meta exo kai updates
     2)updates mpori na min xoraei,kai na theli metakinisi sinexia
       (den mporo na zitao apo ton xristi to megethos)

     
     *fragmentation => metakinisi oste ta kena panta sto telos (argi para poli)
   
   5)Gia gnosta file sizes kai read only data opos ta CD einai to idaniko filesystem
     UDF (Universal Disk Format)

     Sta DVD exo 4 1GB files(max sto UDF) pou ta lene extents

   
11)Linked list

   1)Lista me blocks sto disko
     Ta logical blocks periexoun pointers sto epomeno block
     block=pointer+data

     Problimata 
     1)stin lista prepei na xekinao apo tin arxi => random access poli argo
       h gnosi gia tin lista einai ston disko
     2)o pointer kani to block na min exi megethos dinamis tou 2,alla to programata
       grafoun dedomena se blocks dinamis tou 2 => den xorane ara oti mou dinoun to 
       spao se 2 blocks => kathisterisi

   2)Lista stin mnimi se table =FAT (File Allocation Table)

     Kathe arxio xero pou xekinaei(directory mou to leei)
     px index 4 me value 7 =>epomeno index=7 ktl
        eos value=-1
     
     Lini ta 2 problimata
     1)random access grigoro giati pleon ginete stin mnimi(i lista den einai sto disko)
     2)to block einai dinami tou 2 afou o pinakas einai stin mnimi
   
     Problima = o pinakas einai poli megalos giati periexi indexes osa kai ta blocks
       kai einai stin mnimi!

      px 1tb diskos me 1kb block size = 1 billion entries 4 bytes i kathemia => 2.4gb

     Autos o tropos douleuei mono gia diskous me liga blocks
     
12)I-nodes 

   Exo enan pinaka stin mnimi,me diktes pros i-node anikton arxeion
   1 i-node/anikto arxeio   => poli ligotera pragmata stin mnimi
   Ola ta i-nodes(kliston+anikton arxeion) einai tmima tou diskou,apo ekei
   ta antigrafo ston pinaka pou eiani stin mnimi

   Px anigo arxeio,brisko directory tou,auto lei pio einai to i-node,
      to brisko sto disko,to fortono ston pinaka me ta anikta,diabazo ta blocks tou   

   i-node domi
     file attributes 
     block0 address (address tou protou block tou file px timi block 20)
     block1 address
     ....
     block7 (fixed size)
     pointer se block me pointers (epidi fixed size tou i-node)

   
   O pointer se dixni se ena data structure pou exi ta ipolipa blocks tous arxiou
 
   ->  block8 address
       block9 address
       block10


    H ean einai poli megalo to arxeio o pointer na dixni se block pou exi kialo
    pointer

    ->  block8
        block9
        ...
        pointer 

    H mpori kai pointer se pointer gia akoma megalitera arxia


    -> pointer1
       pointer2
       pointer3
  
   px sto unix i-node

   File mode
   Number of links
   UID
   GID
   File size
   Time created
   Time last accessed
   Time last modified
   10 disk block numbers
   Single indirect block
   Double indirect block
   Triple indirect block

13)Pos anigo arxeia

   1)apo to path directory
   2)apo to directory+filename 
     1)contiguous allocation => address tou file
     2)lists(apli i stin mnimi) => number of first block 
       inode => address tou i-node

14)Domi tou directory file
   (ean den exo i-nodes tote ta attributes ta bazo sto directory)

   1)Me oxi statheres entries/file

     file1 entry length
     file1 attributes
     file1 name
     file2 entry length 
     ......

     Problima otan svino,afou to neo pou tha balo tha exi alou megethous 
     Auti i astathia mpori na proalesi pio eukola lathi

   2)Me statheres
     
     pointer to file1 name
     file1 attributes
     pointer to file2 name
     file2 attributes
     ......
     heap (me ta onomata,px to proto onoma epano epano,meta deutero ktl)

  
     Edo mono to heap allazi to pano meros meni stathero,episis den xriazete
     to length tis kathe entry

15)Search sto directory file

   Einai mnimi => siriaki anazitisi einai ok

   Gia terastia directories mporo na ftiaxo hash table me linked lists gia to directory
   filename ->index ->hashtable-> file entry(timi sto index)

   Alos tropos gia taxitita einai na exo cache gia proigoumena searches

16)Shared files(se pola directories alla 1 physical arxio)
   
   Me i-nodes 1 file se pola directories apla me 1 counter sto i-node
   (svinete otan counter=0)

   Alios symbolic link,arxio me periexomeno to path tou kanonikou arxiou

17)Log-structured filesystem (filesystem stin mnimi)
   =file system in which data and metadata are written sequentially 
    to a circular  buffer, called a log

   Stoxos = na diabazo/grafo sto buffer pou einai grigoro

   To log apoteleite apo segments tou 1mb peripou,kai auta se blocks

   grafo ston disko segments periodika pou einai px 1 mb

   periodika trexi enas cleaner pou elenxi gia xoro pou mpori na eleutherothi
   px pliroforia pou den xriazome pleon,px arxia pou exoun gini update pio mprosta

18)Journaling file systems

   to file system mpori na katagrafi ti prepei na kani kai ti exi kani idi
   ara px ean mino sto 1,otan xanaxekiniso na xero oti prepei na kano to 2,3

   mporoun na ginonte san atomic transactions,i ola i tipota px ntfs   

19)Virtual file systems (vfs)
   Sta windows,to kathe partition i siskeui mpori na exi to diko tou filesystem
   opos sto linux pou parolo pou alo filesystem fenonte san enieo px mount
   se directory


   Oi processes epikoinonoun me to vurtual file system kai meta auto me ta diafora
   alithina filesystems apo kato

   Pos kano access sto unix
   Arxika ta alithina file systems ginonte mounted px se kapio directory tou virtual

   Apo process pao se file descriptors meta se virtual nodes,meta se function pointers
   pou epikoinonoun me to alithino file system

20)Disk-Space Management

   basikos logos pou exo blocks einai gia na mpori ena file na exi diasparta blocks
   sto disko kai na min einai sinexomeno

21)Block size
 
   megalo => waste space(kapia misogemeta)
   small => waste time(searching,on the disk)

   ta blocks einai arithmimena sto disko(kai auto antistixi se physical address)

   Pleon epidi exo terastious diskous einai kalitera na exo kapio waste space,para
   problima stin taxitita px se 1tb mpori block 64kb
   
   1 block px 1kb mpori na antistixi se 2 sectors ton 512bytes o kathenas
   
22)Free blocks

  1)Prepei na xero pia blocks einai free ston disko

  2)2 tropoi
   1)linked lists = kratao ta numbers ton free blocks se lista
     i lista apothikeuete ston adio xoro ara den piani xrisimo xoro,
     pou oso gemizi o diskos mikreni kai i lista

     *Enalaktikos tropos me lista otan exo pola sinexomena free blocks einai na 
      kratao arxiko eleuthero+posa sinexomena eleuthera => mikreni to megethos
 
     Stin mnimi exo ena tmima ton eleutheron blocks idanika me eleutheres thesis 
     arketes oste na mpeni ekei neos eleutheros xoros xoris na xriazete na allazo
     periexomena tou diskou diarkos

   2)bitmap
     edo kathe bit antistixi se 1 block
     exo ena pinaka me melis lexis px ton 32 bits
     ean to bit einai 1 px einai free alios einai gemato

     o arithmos tou block logika prokipti apo to index + tin thesi stin lexi
     To bitmap piani poli ligotero,alla den mikreni oso gemizi o diskos
   
     *to bitmap fortonete stin mnimi

23)block cache => kratao blocks stin mnimi gia grigori prosbasi
  
   Kratao ta periexomena ton blocks stin mnimi gia grigori prosbasi

   Sinihos xrisimopoieite enas hush table(me linked lists otan idio hush)
   san domi tou cache
   px thelo to block 1124= key
  
   Gia to cache efarmozo algorithmous opos sto paging,sto chapter 3 px FIFO LRU

   Mporo na xoriso ta blocks se auta pou einai pithanon na ta xanaxrisimopoiiso
   sintoma kai auta pou ean ta xrisimopoiisa einai apithano sintoma xana oste na 
   krino pou tha ta balo

   Etsi exo mia lista gia kathe index ston hash table,kai analoga me to idos tou
   block to bazo stin thesi stin lista

   H lista exi sigekrimeno megethos kai ta arxika epanagrafonte => otan thelo kati
   na mou mini(pithanon na xanaxrisimopoiithi) to bazo sto telos

   Gia apofigi xasimatos dedomenon iparxoun 2 lisis
    write though cache(palia ta windows),diladi on write grafo kai sto disko
    i periodika apothikeuo ta modified blocks sto disko px ana 30 seconds 

   *Block Read Ahead
   epidi sixna ta blocks ta zitao siriaka otan pao sto cache mporo na paro pola
   blocks mazi gia na pao ligoteres fores


